---

- name: Check Variables
  fail:
    msg: "iw_master_email, iw_master_password, and iw_license_key must all be defined when iw_activate_license is true"
  when:
    - iw_master_password == "" or iw_master_email == "" or iw_license_key == "" # noqa 602
    - iw_activate_license

## the dumb change and failed options are b/c of how the interworx package gets installed.
## tried using package and check mode, but since a repo doesn't exist until the script runs, it can't find a package,
##  and gives another error b/c of that.
- name: Check if Interworx is Installed
  command: rpm -qi interworx
  register: iw_is_inst
  changed_when: false
  failed_when: false
  tags:
    - skip_ansible_lint  # lint gets triggered b/c of using direct rpm command

- name: Fetch Interworx Installer
  get_url:
    url: "{{ iw_install_script_url }}"
    dest: "{{ iw_install_script_loc }}"
  when: iw_is_inst.rc != 0

- name: Alter Interworx Installer Repo File URL
  shell: sed -i 's#https://updates.interworx.com/iworx/yum/interworx.repo-$iworxrepo#{{ iw_alt_repo_file_url }}#' {{ iw_install_script_loc }} # noqa 303
  when:
    - iw_is_inst.rc != 0
    - iw_use_alt_repo_file

- name: Install Interworx
  command: /bin/sh {{ iw_install_script_loc }} -l -r {{ iw_release_channel }} -m {{ iw_mysql_ver }} -p {{ iw_php_ver }}
  become: true
  async: 1800
  register: iworx_install_result
  when:
    - iw_is_inst.rc != 0

- name: Check Interworx Install Script Result
  vars:
    msg: |
        iworx install return code: {{ iworx_install_result.rc }}
        iworx install stdout:
        {{ iworx_install_result.stdout }}
        iworx install stderr:
        {{ iworx_install_result.stderr }}
  debug:
    msg: "{{ msg.split('\n') }}"
  failed_when: iworx_install_result.rc != 0
  when: iw_is_inst.rc !=0

- name: Install Interworx CLI
  package:
    name: "interworx-cli"
    state: "{{ iw_cli_pkg_state }}"

- name: Activate Interworx License
  command: >
    ~iworx/bin/goiworx.pex
    --key={{ iw_license_key }}
    --email={{ iw_master_email }}
    --password={{ iw_master_password }}
    --ignorechecks
  become: true
  failed_when: false
  register: goiworx_result
  when: (iw_is_inst.rc != 0 and iw_activate_license)

- name: Check Interworx License Activation Result
  vars:
    msg: |
        goiworx return code: {{ goiworx_result.rc }}
        goiworx stdout:
        {{ goiworx_result.stdout }}
        goiworx stderr:
        {{ goiworx_result.stderr }}
  debug:
    msg: "{{ msg.split('\n') }}"
  failed_when: true
  when: (iw_is_inst.rc != 0 and iw_activate_license and goiworx_result.rc != 0)

- name: Remove Base PHP packages
  package:
    name: "{{ item }}"
    state: "absent"
  with_items: "{{ iw_symlink_base_php_packages }}"
  when: iw_symlink_base_php

- name: Symlink Base PHP
  file:
    src: "{{ iw_symlink_base_php_path }}"
    dest: "/usr/bin/php"
    owner: "root"
    group: "root"
    state: "link"
  when: iw_symlink_base_php

- name: Accept Interworx EULA
  ini_file:
    path: "/home/interworx/iworx.ini"
    section: "iworx"
    option: "firstrun"
    value: "\"0\""
    no_extra_spaces: "yes"
  when:
    - iw_accept_eula

- name: Set iworx.ini ns1
  ini_file:
    path: "/home/interworx/iworx.ini"
    section: "dns"
    option: "ns1"
    value: "\"{{ iw_ns1 }}\""
    no_extra_spaces: "yes"
  when:
    - iw_ns1 != ""  # noqa 602
    - iw_activate_license

- name: Set iworx.ini ns2
  ini_file:
    path: "/home/interworx/iworx.ini"
    section: "dns"
    option: "ns2"
    value: "\"{{ iw_ns2 }}\""
    no_extra_spaces: "yes"
  when:
    - iw_ns2 != ""  # noqa 602
    - iw_activate_license

- name: Set iworx.ini ns3
  ini_file:
    path: "/home/interworx/iworx.ini"
    section: "dns"
    option: "ns3"
    value: "\"{{ iw_ns3 }}\""
    no_extra_spaces: "yes"
  when:
    - iw_ns3 != ""  # noqa 602
    - iw_activate_license

- name: Set Default NS
  command: >
    nodeworx
    -un
    -c Dns
    -a defaultServers
    --ns1="{{ iw_ns1 }}"
    --ns2="{{ iw_ns2 }}"
    --ns3="{{ iw_ns3 }}"
  when:
    - iw_ns1 != "" or iw_ns2 != "" or iw_ns3 != ""  # noqa 602
    - iw_activate_license

- name: Test Logging Into Interworx
  uri:
    url: "https://{{ ansible_default_ipv4.address }}:2443/nodeworx/?action=login"
    method: "POST"
    body: "email={{ iw_master_email|urlencode() }}&password={{ iw_master_password|urlencode() }}"
    status_code: 302
    headers:
      Content-Type: "application/x-www-form-urlencoded"
    validate_certs: "no"
  register: login
  until: "login is not failed"
  retries: 3
  delay: 5
  when:
    - iw_activate_license

- name: Test Logging Into Interworx Step 2
  uri:
    url: "https://{{ ansible_default_ipv4.address }}:2443/nodeworx/dns"
    follow_redirects: "all"
    headers:
      Cookie: "{{ login.set_cookie }}"
    validate_certs: "no"
  register: login_step_2
  until: "login_step_2 is not failed"
  retries: 3
  delay: 5
  when:
    - iw_activate_license

- name: Check for existing API key
  shell: >
    nodeworx -un -c Apikey -a listApikey
  changed_when: false
  register: listapikey_result
  tags:
    - apikey

- name: Generate API Key
  shell: >
    nodeworx -un -c Apikey -a generate
  when: iw_generate_apikey and 'INTERWORX API KEY' not in listapikey_result.stdout
  tags:
    - apikey

- include: theme.yml
  when:
    - iw_theme_name != ""  # noqa 602
    - iw_theme_git_repo != ""  # noqa 602
    - iw_activate_license
  ignore_errors: true
